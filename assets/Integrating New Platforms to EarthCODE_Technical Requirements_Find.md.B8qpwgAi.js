import{_ as a}from"./chunks/data_access_ecstandards.DVBM5yoD.js";import{_ as t,c as i,a7 as r,o as s}from"./chunks/framework.BKiDQeMP.js";const f=JSON.parse('{"title":"Find","description":"","frontmatter":{"order":5},"headers":[],"relativePath":"Integrating New Platforms to EarthCODE/Technical Requirements/Find.md","filePath":"Integrating New Platforms to EarthCODE/Technical Requirements/Find.md"}'),o={name:"Integrating New Platforms to EarthCODE/Technical Requirements/Find.md"};function n(c,e,d,h,l,p){return s(),i("div",null,e[0]||(e[0]=[r('<h1 id="find" tabindex="-1">Find <a class="header-anchor" href="#find" aria-label="Permalink to &quot;Find&quot;">​</a></h1><p>Discoverability in EarthCODE is provided by the Open Science Catalog, which exposes all published resources through a suite of open, standardized APIs for both human and machine access.</p><h3 id="discovery-and-access" tabindex="-1">Discovery and Access <a class="header-anchor" href="#discovery-and-access" aria-label="Permalink to &quot;Discovery and Access&quot;">​</a></h3><p>Catalog search uses the STAC API to perform spatial, temporal and attribute‑based queries against collections and items. Feature‑level retrieval is provided by OGC API – Features (or WFS), and multi‑dimensional data can be accessed via OGC WCS. Visualization layers may be exposed through OGC WMS and WMTS.</p><p><img src="'+a+'" alt="Resource Discovery &amp; Access"></p><h4 id="core-discovery-via-stac-api" tabindex="-1">Core Discovery via STAC API <a class="header-anchor" href="#core-discovery-via-stac-api" aria-label="Permalink to &quot;Core Discovery via STAC API&quot;">​</a></h4><p>The primary programmatic interface for searching the catalog is the <strong>STAC API</strong>. This is the main endpoint for machine-to-machine queries. It enables complex spatial, temporal, and attribute-based queries to find relevant data products and experiments. The effectiveness of these searches relies on the rich, standardized metadata described in the <a href="./Metadata-Definitions">Metadata Definitions</a> page.</p>',7)]))}const v=t(o,[["render",n]]);export{f as __pageData,v as default};
